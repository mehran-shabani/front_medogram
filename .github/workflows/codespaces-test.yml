name: Codespaces Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  codespaces-test:
    name: Test Codespaces Configuration
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Verify devcontainer configuration
        run: |
          echo "Checking devcontainer configuration..."
          
          # Check if devcontainer.json exists
          if [ ! -f ".devcontainer/devcontainer.json" ]; then
            echo "‚ùå .devcontainer/devcontainer.json not found"
            exit 1
          fi
          echo "‚úÖ .devcontainer/devcontainer.json exists"
          
          # Check if Dockerfile exists
          if [ ! -f ".devcontainer/Dockerfile" ]; then
            echo "‚ùå .devcontainer/Dockerfile not found"
            exit 1
          fi
          echo "‚úÖ .devcontainer/Dockerfile exists"
          
          # Check if README exists
          if [ ! -f ".devcontainer/README.md" ]; then
            echo "‚ùå .devcontainer/README.md not found"
            exit 1
          fi
          echo "‚úÖ .devcontainer/README.md exists"

      - name: Validate devcontainer.json syntax
        run: |
          echo "Validating devcontainer.json syntax..."
          
          # Check if jq is available for JSON validation
          if command -v jq >/dev/null 2>&1; then
            if jq empty .devcontainer/devcontainer.json 2>/dev/null; then
              echo "‚úÖ devcontainer.json has valid JSON syntax"
            else
              echo "‚ùå devcontainer.json has invalid JSON syntax"
              exit 1
            fi
          else
            echo "‚ö†Ô∏è jq not available, skipping JSON syntax validation"
          fi

      - name: Check required devcontainer fields
        run: |
          echo "Checking required devcontainer fields..."
          
          # Check for required fields using grep
          if grep -q '"name"' .devcontainer/devcontainer.json; then
            echo "‚úÖ 'name' field present"
          else
            echo "‚ùå 'name' field missing"
            exit 1
          fi
          
          if grep -q '"image"' .devcontainer/devcontainer.json; then
            echo "‚úÖ 'image' field present"
          else
            echo "‚ùå 'image' field missing"
            exit 1
          fi
          
          if grep -q '"forwardPorts"' .devcontainer/devcontainer.json; then
            echo "‚úÖ 'forwardPorts' field present"
          else
            echo "‚ùå 'forwardPorts' field missing"
            exit 1
          fi
          
          if grep -q '"postCreateCommand"' .devcontainer/devcontainer.json; then
            echo "‚úÖ 'postCreateCommand' field present"
          else
            echo "‚ùå 'postCreateCommand' field missing"
            exit 1
          fi

      - name: Test Dockerfile syntax
        run: |
          echo "Testing Dockerfile syntax..."
          
          # Basic Dockerfile validation
          if grep -q "FROM" .devcontainer/Dockerfile; then
            echo "‚úÖ Dockerfile has FROM instruction"
          else
            echo "‚ùå Dockerfile missing FROM instruction"
            exit 1
          fi
          
          if grep -q "WORKDIR" .devcontainer/Dockerfile; then
            echo "‚úÖ Dockerfile has WORKDIR instruction"
          else
            echo "‚ùå Dockerfile missing WORKDIR instruction"
            exit 1
          fi
          
          if grep -q "EXPOSE" .devcontainer/Dockerfile; then
            echo "‚úÖ Dockerfile has EXPOSE instruction"
          else
            echo "‚ùå Dockerfile missing EXPOSE instruction"
            exit 1
          fi

      - name: Check package.json compatibility
        run: |
          echo "Checking package.json compatibility with Codespaces..."
          
          # Check if package.json exists
          if [ ! -f "package.json" ]; then
            echo "‚ùå package.json not found"
            exit 1
          fi
          echo "‚úÖ package.json exists"
          
          # Check for required scripts
          if grep -q '"dev"' package.json; then
            echo "‚úÖ 'dev' script present"
          else
            echo "‚ùå 'dev' script missing"
            exit 1
          fi
          
          if grep -q '"build"' package.json; then
            echo "‚úÖ 'build' script present"
          else
            echo "‚ùå 'build' script missing"
            exit 1
          fi
          
          if grep -q '"lint"' package.json; then
            echo "‚úÖ 'lint' script present"
          else
            echo "‚ùå 'lint' script missing"
            exit 1
          fi

      - name: Verify VS Code extensions
        run: |
          echo "Checking VS Code extensions configuration..."
          
          # Check if extensions are configured
          if grep -q '"extensions"' .devcontainer/devcontainer.json; then
            echo "‚úÖ VS Code extensions configured"
            
            # Check for essential extensions
            if grep -q "bradlc.vscode-tailwindcss" .devcontainer/devcontainer.json; then
              echo "‚úÖ Tailwind CSS extension configured"
            else
              echo "‚ö†Ô∏è Tailwind CSS extension not configured"
            fi
            
            if grep -q "esbenp.prettier-vscode" .devcontainer/devcontainer.json; then
              echo "‚úÖ Prettier extension configured"
            else
              echo "‚ö†Ô∏è Prettier extension not configured"
            fi
            
            if grep -q "dbaeumer.vscode-eslint" .devcontainer/devcontainer.json; then
              echo "‚úÖ ESLint extension configured"
            else
              echo "‚ö†Ô∏è ESLint extension not configured"
            fi
          else
            echo "‚ö†Ô∏è No VS Code extensions configured"
          fi

      - name: Test environment variables
        run: |
          echo "Checking environment variables configuration..."
          
          # Check if environment variables are set
          if grep -q '"containerEnv"' .devcontainer/devcontainer.json; then
            echo "‚úÖ Container environment variables configured"
            
            if grep -q "VITE_API_BASE_URL" .devcontainer/devcontainer.json; then
              echo "‚úÖ VITE_API_BASE_URL configured"
            else
              echo "‚ö†Ô∏è VITE_API_BASE_URL not configured"
            fi
            
            if grep -q "VITE_LOCAL_API_URL" .devcontainer/devcontainer.json; then
              echo "‚úÖ VITE_LOCAL_API_URL configured"
            else
              echo "‚ö†Ô∏è VITE_LOCAL_API_URL not configured"
            fi
          else
            echo "‚ö†Ô∏è No container environment variables configured"
          fi

      - name: Summary
        run: |
          echo ""
          echo "üéâ Codespaces configuration test completed successfully!"
          echo ""
          echo "üìã Summary:"
          echo "  ‚úÖ devcontainer.json configuration valid"
          echo "  ‚úÖ Dockerfile syntax correct"
          echo "  ‚úÖ package.json compatible"
          echo "  ‚úÖ VS Code extensions configured"
          echo "  ‚úÖ Environment variables set"
          echo ""
          echo "üöÄ Your Codespaces environment is ready for development!"