version: '3.8'

services:
  # Frontend application
  medogram-frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL:-https://api.medogram.ir}
        - VITE_LOCAL_API_URL=${VITE_LOCAL_API_URL:-http://127.0.0.1:8000}
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.medogram.rule=Host(`medogram.ir`)"
      - "traefik.http.routers.medogram.tls=true"
      - "traefik.http.routers.medogram.tls.certresolver=letsencrypt"
    networks:
      - medogram-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - medogram-network

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - medogram-frontend
    restart: unless-stopped
    networks:
      - medogram-network
    profiles:
      - production

  # Watchtower for automatic updates (optional)
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600
    restart: unless-stopped
    profiles:
      - production

networks:
  medogram-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  nginx-logs:
    driver: local